@page "/rol/agregar"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ILocalStorageService _localStorageService

<MudText Typo="Typo.h2" Class="ml">Nuevo Rol</MudText>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <EditForm Model="rol" OnValidSubmit="OnValidSubmit">
                <DataAnnotationsValidator />
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Nombre" @bind-Value="rol.Nombre" For="@(() => rol.Nombre)" />
                    </MudCardContent>
                    <MudCardActions>
                        <div class="ContenedorBotonesGuardarLibro">
                            <a href="@($"/rol/index")">
                                <button class="BotonesAdminlibroAtras Atras">Cancelar</button>
                            </a>
                            <button Type="Submit" Variant="Variant.Filled" Class="BotonesAdminlibroGuardar Guardar"> Guardar</button>
                        </div>
                    </MudCardActions>
                </MudCard>
            </EditForm>
            @if (showLeaveAlert)
            {
                <MudAlert Severity="Severity.Error" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(true))">No se pudo guardar.</MudAlert>
            }
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    private bool showLeaveAlert = false;
    Rol rol = new Rol();

    protected override async Task OnInitializedAsync()
    {
        Http.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));
    }

    private async Task OnValidSubmit(EditContext context)
    {
        await save();
    }

    private async Task save()
    {

        var httpResponse = await Http.PostAsJsonAsync<Rol>("rol", rol);

        if (!(httpResponse.StatusCode == System.Net.HttpStatusCode.OK))
        {
            showLeaveAlert = true;
        }
        else
        {
            NavigationManager.NavigateTo("rol/index");
        }
    }

    private void CloseMe(bool value)
    {
        showLeaveAlert = false;
    }
}
