@page "/rol/index"
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@inject ILocalStorageService _localStorageService

<MudText Typo="Typo.h2" Class="ml text">Roles</MudText>

<br />
<div class="">
    <a href="/rol/agregar">
        <button class="button"></button>
    </a>
</div>
<br />

<MudTable Items="@roles" Dense="true" Hover="true" Bordered="true" Striped="true">
    <ToolBarContent>
        <MudSpacer />
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Nombre</MudTh>
        <MudTh>Acciones</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Id">@context.Id</MudTd>
        <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
        <MudTd>
            <MudButton Link="@($"/rol/editar/{context.Id}")" Size="Size.Small" Variant="Variant.Filled" Color="Color.Tertiary"
                       StartIcon="@Icons.Material.Filled.EditNote"
                       Class="text-center">Editar</MudButton>
            <MudButton Link="@($"/rol/eliminar/{context.Id}")" Size="Size.Small" Variant="Variant.Filled" Color="Color.Error"
                       StartIcon="@Icons.Material.Filled.Delete"
                       Class="text-center">Eliminar</MudButton>
        </MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>

@code {
    private IEnumerable<Rol> roles = new List<Rol>();
    private string searchText = "";

    protected override async Task OnInitializedAsync()
    {
        httpClient.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));
        await getAll();
    }

    private async Task getAll()
    {
        var httpResponse = await httpClient.GetStringAsync("rol");
        roles = JsonSerializer.Deserialize<IEnumerable<Rol>>(httpResponse, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private void goAdd()
    {
        NavigationManager.NavigateTo("rol/agregar");
    }
}

