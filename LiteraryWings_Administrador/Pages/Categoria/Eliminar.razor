@page "/categoria/eliminar/{id:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ILocalStorageService _localStorageService

<h1 class="Titulo-EliminarLibro">Eliminar Categoria</h1>

<div class="Contenedor-Agregar-Editar-Eliminar">

    <EditForm Model="categoria" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="Nombre" @bind-Value="categoria.Nombre" For="@(() => categoria.Nombre)" Disabled />
            </MudCardContent>
            <MudCardActions>
                <div class="ContenedorBotonesGuardarLibro">
                    <a href="@($"/categoria/index")">
                        <button class="BotonesAdminlibroAtras Cancelar">Cancelar</button>
                    </a>
                    <button Type="Submit" Variant="Variant.Filled" Class="BotonesAdminlibroGuardar Eliminar">Eliminar</button>
                </div>
            </MudCardActions>
        </MudCard>
    </EditForm>
    @if (showLeaveAlert)
    {
        <MudAlert Severity="Severity.Error" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(true))">Ocurrió un problema.</MudAlert>
    }

</div>

@code {
    [Parameter]
    public int id { get; set; }
    private bool showLeaveAlert = false;
    Categoria categoria = new Categoria();

    protected override async Task OnInitializedAsync()
    {
        Http.DefaultRequestHeaders.Authorization =
            new AuthenticationHeaderValue("Bearer", await _localStorageService.GetItemAsync<string>("token"));
        var resp = await Http.GetStringAsync("categoria/" + id);
        categoria = JsonSerializer.Deserialize<Categoria>(resp, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private async Task OnValidSubmit(EditContext context)
    {
        await eliminar();
    }

    private async Task eliminar()
    {

        var httpResponse = await Http.DeleteAsync("categoria/" + categoria.Id);

        if (!(httpResponse.StatusCode == System.Net.HttpStatusCode.OK))
        {
            showLeaveAlert = true;
        }
        else
        {
            NavigationManager.NavigateTo("categoria/index");
        }
    }

    private void CloseMe(bool value)
    {
        showLeaveAlert = false;
    }
}